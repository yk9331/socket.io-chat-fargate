version: "3"
networks:
  chat:


services:
  # Launch the Redis used for syncing messages between copies of the client app
  redis:
    image: public.ecr.aws/ubuntu/redis:latest
    networks:
      - chat
    ports:
      - 6379:6379
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'

  # Launch a local version of DynamoDB
  dynamodb-local:
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    networks:
      - chat

  # Ephemeral container used for creating the tables in DynamoDB
  dynamodb-tables:
    depends_on:
      - dynamodb-local
    networks:
      - chat
    build: ./deps/dynamodb-tables
    environment:
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test

  # The actual client application
  client:
    depends_on:
      - redis
      - dynamodb-tables
    networks:
      - chat
    build: ./services/client
    environment:
      LOCAL: "true"
      ENV_NAME: test
      REDIS_ENDPOINT: redis
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    ports:
      - 3000:3000

  # The test suite
  test:
    depends_on:
      - client
    networks:
      - chat
    build: ./services/test-suite
    environment:
      SELF_URL: http://client:3000
